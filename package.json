{
  "name": "llm-commit-craft",
  "displayName": "llm-commit-craft",
  "description": "LLM Commit Craft is an extension for Visual Studio Code that allows users to generate a commit message based on staged changes in the repository.",
  "version": "0.1.0",
  "publisher": "mythias",
  "repository": {
    "type": "git",
    "url": "https://github.com/myinusa/llm-commit-craft"
  },
  "keywords": [
    "conventional commits",
    "git",
    "commit",
    "message"
  ],
  "engines": {
    "vscode": "^1.95.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "llm-commit-craft.generateCommitMessage",
        "title": "Generate Commit Message",
        "category": "LLM Commit Craft"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "LLM Commit Craft Configuration",
      "properties": {
        "llmCommitCraft.url": {
          "type": "string",
          "default": "http://127.0.0.1:1234/v1/",
          "description": "The URL to use for generating commit messages."
        },
        "llmCommitCraft.model": {
          "type": "string",
          "default": "qwen2.5-coder-3b-instruct",
          "description": "The model to use for generating commit messages."
        },
        "llmCommitCraft.temperature": {
          "type": "number",
          "default": 0.8,
          "description": "The temperature setting for the model."
        },
        "llmCommitCraft.maxTokens": {
          "type": "number",
          "default": -1,
          "description": "The maximum number of tokens to generate."
        },
        "llmCommitCraft.seed": {
          "type": "number",
          "default": -1,
          "description": "The seed for random number generation."
        },
        "llmCommitCraft.prompt": {
          "type": "string",
          "default": "Create conventional commit messages from the following output of 'git diff --staged' command, use Markdown syntax as your answer no title, no heading, list or numbered list, each line a conventional commit message. It is important to include the scope. Follow the format: <type>(<scope>): <description>. The <type> could be feat, fix, docs, style, refactor, perf, test, or chore, and the <scope> would be a specific part of the codebase affected by the changes.",
          "description": "The prompt to use for generating commit messages."
        }
      }
    }
  },
  "scripts": {
    "package": "pnpm vsce package --no-dependencies",
    "publish": "pnpm vsce publish --no-dependencies",
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "pnpm run compile && pnpm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@eslint/compat": "^1.2.4",
    "@eslint/js": "^9.16.0",
    "@types/mocha": "^10.0.9",
    "@types/node": "^20.17.10",
    "@types/vscode": "^1.95.0",
    "@typescript-eslint/eslint-plugin": "^8.18.0",
    "@typescript-eslint/parser": "^8.18.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "eslint": "^9.16.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-n": "^17.15.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-promise": "^7.2.1",
    "eslint-plugin-security-node": "^1.1.4",
    "eslint-plugin-sonarjs": "^3.0.1",
    "eslint-plugin-unicorn": "^56.0.1",
    "typescript": "^5.6.3",
    "typescript-eslint": "^8.18.0"
  },
  "dependencies": {
    "openai": "^4.76.0"
  }
}